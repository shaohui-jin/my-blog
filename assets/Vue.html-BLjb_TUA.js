import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as r,c as a,a as e,e as c,w as s,b as t,d}from"./app-DJGNjMvf.js";const l={},p=t('<h3 id="为什么要虚拟dom" tabindex="-1"><a class="header-anchor" href="#为什么要虚拟dom"><span>为什么要虚拟DOM</span></a></h3><ol><li>框架设计： 渲染页面运行render函数，组件化开发的时候属性一旦改变只能全量渲染，直接操作DOM代价过高，使用虚拟DOM代替</li><li>跨平台：除了浏览器环境，其他环境都不存在dom，打包其他环境的时候可以用虚拟dom做中间转换</li></ol><h3 id="proxy-和-defineproperty-的区别" tabindex="-1"><a class="header-anchor" href="#proxy-和-defineproperty-的区别"><span>Proxy 和 DefineProperty 的区别</span></a></h3><blockquote><p><strong>Proxy</strong> 可以重定义对象的所有基本方法</p><p><strong>DefineProperty</strong> 只是基本方法之一</p></blockquote><h3 id="v-if-和-v-for优先级" tabindex="-1"><a class="header-anchor" href="#v-if-和-v-for优先级"><span>v-if 和 v-for优先级</span></a></h3><blockquote><p>在 Vue 2 中，v-for 的优先级高于 v-if，也就是说，Vue 2 在渲染时，会先处理 v-for 生成列表项，再对子项判断 v-if 是否渲染。</p><p>在 Vue3 中，v-if 的优先级高于 v-for，也就是说， v-if 的条件将无法访问到 v-for 作用域内定义的变量别名，所以会报错。</p></blockquote><h3 id="extend-s-与mixins差异" tabindex="-1"><a class="header-anchor" href="#extend-s-与mixins差异"><span>extend(s)与mixins差异</span></a></h3><blockquote><p><strong>Mixins</strong> 选项接收一个混入对象的数组（即可以多个）。</p><ul><li>当值为对象的选项，如 <strong>methods,components</strong> 等，选项会被合并，键冲突的时候组件会覆盖混入对象</li><li>当值为函数的选项，如 <strong>created,mounted</strong> 等，就会被合并调用，混入对象钩子函数会比组件里的钩子函数先调用</li></ul><p><strong>Extends</strong> 只能暴露一个extends对象。</p><ul><li>extends会比Mixins先执行。执行顺序：extends &gt; Mixins&gt; 组件</li></ul></blockquote>',8),h={id:"生命周期",tabindex:"-1"},u={class:"header-anchor",href:"#生命周期"},g=t('<figure><img src="https://shaohui-jin.github.io/picx-images-hosting/blog/Vue/生命周期.5fkdt6fcci.webp" alt="" height="800" tabindex="0" loading="lazy"><figcaption>vueLifecycle</figcaption></figure><h3 id="created与activated差异" tabindex="-1"><a class="header-anchor" href="#created与activated差异"><span>created与activated差异</span></a></h3><blockquote><p>页面第一次进入，钩子的触发顺序 <strong>created -&gt; mounted-&gt; activated</strong>，退出时触发 <strong>deactivated</strong></p><p>当再次进入（前进或者后退）时，只触发 <strong>activated</strong></p><p>被包含在 &lt;<strong>keep-alive</strong>&gt; 中创建的组件，会多出两个生命周期的钩子: activated 与 deactivated</p><ul><li><strong>activated</strong>：在组件第一次渲染时也会被调用，之后每次keep-alive激活时被调用。</li><li><strong>deactivated</strong>：在组件被停用时调用。</li></ul></blockquote><h3 id="通讯方式" tabindex="-1"><a class="header-anchor" href="#通讯方式"><span>通讯方式</span></a></h3><blockquote><ul><li>父子组件通信: <code>props/$emit</code>、<code>$parent/$children</code>、<code>provide/inject</code>、<code>ref</code>、<code>$attrs/$listeners</code></li><li>兄弟组件通信: <code>eventBus</code>、<code>Vuex</code></li><li>跨级通信: <code>eventBus</code>、<code>Vuex</code>、<code>provide/inject</code>、<code>$attrs/$listeners</code></li></ul></blockquote>',5);function m(f,x){const o=n("RouteLink");return r(),a("div",null,[p,e("h3",h,[e("a",u,[e("span",null,[c(o,{to:"/Promotion/Vue/LifeCycle/"},{default:s(()=>[d("生命周期")]),_:1})])])]),g])}const b=i(l,[["render",m],["__file","Vue.html.vue"]]),k=JSON.parse('{"path":"/zh/%E9%9D%A2%E8%AF%95%E9%A2%98/Vue.html","title":"","lang":"zh-CN","frontmatter":{"headerDepth":3,"description":"为什么要虚拟DOM 框架设计： 渲染页面运行render函数，组件化开发的时候属性一旦改变只能全量渲染，直接操作DOM代价过高，使用虚拟DOM代替 跨平台：除了浏览器环境，其他环境都不存在dom，打包其他环境的时候可以用虚拟dom做中间转换 Proxy 和 DefineProperty 的区别 Proxy 可以重定义对象的所有基本方法 DefinePr...","head":[["meta",{"property":"og:url","content":"https://shaohui-jin.github.io/my-blog/zh/%E9%9D%A2%E8%AF%95%E9%A2%98/Vue.html"}],["meta",{"property":"og:description","content":"为什么要虚拟DOM 框架设计： 渲染页面运行render函数，组件化开发的时候属性一旦改变只能全量渲染，直接操作DOM代价过高，使用虚拟DOM代替 跨平台：除了浏览器环境，其他环境都不存在dom，打包其他环境的时候可以用虚拟dom做中间转换 Proxy 和 DefineProperty 的区别 Proxy 可以重定义对象的所有基本方法 DefinePr..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://shaohui-jin.github.io/picx-images-hosting/blog/Vue/生命周期.5fkdt6fcci.webp \\"vueLifecycle\\" =x800"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-16T08:15:52.000Z"}],["meta",{"property":"article:author","content":"石怜安"}],["meta",{"property":"article:modified_time","content":"2025-06-16T08:15:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"https://shaohui-jin.github.io/picx-images-hosting/blog/Vue/生命周期.5fkdt6fcci.webp \\\\\\"vueLifecycle\\\\\\" =x800\\"],\\"dateModified\\":\\"2025-06-16T08:15:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"石怜安\\",\\"url\\":\\"https://shaohui-jin.github.io\\"}]}"]]},"headers":[{"level":3,"title":"为什么要虚拟DOM","slug":"为什么要虚拟dom","link":"#为什么要虚拟dom","children":[]},{"level":3,"title":"Proxy 和 DefineProperty 的区别","slug":"proxy-和-defineproperty-的区别","link":"#proxy-和-defineproperty-的区别","children":[]},{"level":3,"title":"v-if 和 v-for优先级","slug":"v-if-和-v-for优先级","link":"#v-if-和-v-for优先级","children":[]},{"level":3,"title":"extend(s)与mixins差异","slug":"extend-s-与mixins差异","link":"#extend-s-与mixins差异","children":[]},{"level":3,"title":"生命周期","slug":"生命周期","link":"#生命周期","children":[]},{"level":3,"title":"created与activated差异","slug":"created与activated差异","link":"#created与activated差异","children":[]},{"level":3,"title":"通讯方式","slug":"通讯方式","link":"#通讯方式","children":[]}],"git":{"createdTime":1747917796000,"updatedTime":1750061752000,"contributors":[{"name":"shaohui_jin","email":"1051131737@qq.com","commits":2}]},"readingTime":{"minutes":1.71,"words":514},"filePathRelative":"zh/面试题/Vue.md","localizedDate":"2025年5月22日","excerpt":"<h3>为什么要虚拟DOM</h3>\\n<ol>\\n<li>框架设计： 渲染页面运行render函数，组件化开发的时候属性一旦改变只能全量渲染，直接操作DOM代价过高，使用虚拟DOM代替</li>\\n<li>跨平台：除了浏览器环境，其他环境都不存在dom，打包其他环境的时候可以用虚拟dom做中间转换</li>\\n</ol>\\n<h3>Proxy 和 DefineProperty 的区别</h3>\\n<blockquote>\\n<p><strong>Proxy</strong> 可以重定义对象的所有基本方法</p>\\n<p><strong>DefineProperty</strong> 只是基本方法之一</p>\\n</blockquote>","autoDesc":true}');export{b as comp,k as data};
