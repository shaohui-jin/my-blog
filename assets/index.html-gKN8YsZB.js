import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-DCLtSmWZ.js";const p={},o=t(`<h2 id="思路" tabindex="-1"><a class="header-anchor" href="#思路"><span>思路</span></a></h2><p>在 Vue 项目中，一般采用 <strong>vuex</strong> 或者 <strong>pinia</strong> 去实现全局的状态仓库，</p><p>同时在设计时有提供插件方式去控制数据源，可以从插件的方式入手持久化。</p><h3 id="vuex" tabindex="-1"><a class="header-anchor" href="#vuex"><span>Vuex</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// store.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> cretrStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>
<span class="token keyword">import</span> counter <span class="token keyword">from</span> <span class="token string">&#39;./counter&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> persistPlugin <span class="token keyword">from</span> <span class="token string">&#39;./persistPlugin&#39;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">cretrStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    counter
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>persistPlugin<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> store<span class="token punctuation">;</span>

<span class="token comment">// persistPlugin.js</span>
<span class="token keyword">const</span> <span class="token constant">KEY_PREFIX</span> <span class="token operator">=</span> <span class="token string">&#39;VUEX:STATE:&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">KEY_PREFIX</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>context<span class="token punctuation">.</span>store<span class="token punctuation">.</span>$id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token comment">// 存</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;beforeunload&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>store<span class="token punctuation">.</span>$state<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// 取</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> originState <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
    store<span class="token punctuation">.</span><span class="token function">replaceState</span><span class="token punctuation">(</span>originState<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;存储格式有误&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pinia" tabindex="-1"><a class="header-anchor" href="#pinia"><span>Pinia</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// main.js</span>
<span class="token keyword">import</span>  <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> cretrPinia <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
<span class="token keyword">import</span> persistPlugin <span class="token keyword">from</span> <span class="token string">&#39;./persistPlugin&#39;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>

<span class="token keyword">const</span> pinia <span class="token operator">=</span> <span class="token function">cretrPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
pinia<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>persistPlugin<span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>pinia<span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// persistPlugin.js</span>
<span class="token keyword">const</span> <span class="token constant">KEY_PREFIX</span> <span class="token operator">=</span> <span class="token string">&#39;PINIA:STATE:&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">KEY_PREFIX</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>context<span class="token punctuation">.</span>store<span class="token punctuation">.</span>$id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token comment">// 存</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;beforeunload&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>store<span class="token punctuation">.</span>$state<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// 取</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> originState <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
    context<span class="token punctuation">.</span>store<span class="token punctuation">.</span><span class="token function">$patch</span><span class="token punctuation">(</span>originState<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;存储格式有误&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),e=[o];function c(i,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","index.html.vue"]]),d=JSON.parse(`{"path":"/Promotion/Vue/ThirdExpand/vuex/","title":"状态仓库持久化","lang":"zh-CN","frontmatter":{"title":"状态仓库持久化","lang":"zh-CN","date":"2025-05-06T17:14:30.000Z","permalink":"/Promotion/Vue/ThirdExpand/vuex/","category":["VUE"],"tag":["VUE"],"description":"思路 在 Vue 项目中，一般采用 vuex 或者 pinia 去实现全局的状态仓库， 同时在设计时有提供插件方式去控制数据源，可以从插件的方式入手持久化。 Vuex Pinia","head":[["meta",{"property":"og:url","content":"https://shaohui-jin.github.io/Promotion/Vue/ThirdExpand/vuex/"}],["meta",{"property":"og:title","content":"状态仓库持久化"}],["meta",{"property":"og:description","content":"思路 在 Vue 项目中，一般采用 vuex 或者 pinia 去实现全局的状态仓库， 同时在设计时有提供插件方式去控制数据源，可以从插件的方式入手持久化。 Vuex Pinia"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-06T10:11:36.000Z"}],["meta",{"property":"article:author","content":"石怜安"}],["meta",{"property":"article:tag","content":"VUE"}],["meta",{"property":"article:published_time","content":"2025-05-06T17:14:30.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-06T10:11:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"状态仓库持久化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-06T17:14:30.000Z\\",\\"dateModified\\":\\"2025-05-06T10:11:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"石怜安\\",\\"url\\":\\"https://shaohui-jin.github.io\\"}]}"]]},"headers":[{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[{"level":3,"title":"Vuex","slug":"vuex","link":"#vuex","children":[]},{"level":3,"title":"Pinia","slug":"pinia","link":"#pinia","children":[]}]}],"git":{"createdTime":1746526296000,"updatedTime":1746526296000,"contributors":[{"name":"shaohui_jin","email":"1051131737@qq.com","commits":1}]},"readingTime":{"minutes":0.78,"words":235},"filePathRelative":"zh/精选文章/Vue/第三方库拓展/状态仓库持久化.md","localizedDate":"2025年5月6日","excerpt":"<h2>思路</h2>\\n<p>在 Vue 项目中，一般采用 <strong>vuex</strong> 或者 <strong>pinia</strong> 去实现全局的状态仓库，</p>\\n<p>同时在设计时有提供插件方式去控制数据源，可以从插件的方式入手持久化。</p>\\n<h3>Vuex</h3>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// store.js</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> cretrStore <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'vuex'</span>\\n<span class=\\"token keyword\\">import</span> counter <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'./counter'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> persistPlugin <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'./persistPlugin'</span>\\n\\n<span class=\\"token keyword\\">const</span> store <span class=\\"token operator\\">=</span> <span class=\\"token function\\">cretrStore</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">modules</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    counter\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">plugins</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>persistPlugin<span class=\\"token punctuation\\">]</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> store<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// persistPlugin.js</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token constant\\">KEY_PREFIX</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'VUEX:STATE:'</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">context</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> key <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span><span class=\\"token constant\\">KEY_PREFIX</span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>context<span class=\\"token punctuation\\">.</span>store<span class=\\"token punctuation\\">.</span>$id<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">\`</span></span>\\n  <span class=\\"token comment\\">// 存</span>\\n  window<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addEventListener</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'beforeunload'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    localStorage<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setItem</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">,</span> <span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stringify</span><span class=\\"token punctuation\\">(</span>context<span class=\\"token punctuation\\">.</span>store<span class=\\"token punctuation\\">.</span>$state<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token comment\\">// 取</span>\\n  <span class=\\"token keyword\\">const</span> value <span class=\\"token operator\\">=</span> localStorage<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getItem</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>value<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> originState <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parse</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    store<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replaceState</span><span class=\\"token punctuation\\">(</span>originState<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'存储格式有误'</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n</code></pre></div>","autoDesc":true}`);export{k as comp,d as data};
