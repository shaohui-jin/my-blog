import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as o,b as a,a as n,d as s}from"./app-Cf1xXn99.js";const c={},l=a(`<h3 id="深克隆" tabindex="-1"><a class="header-anchor" href="#深克隆"><span>深克隆</span></a></h3><h4 id="解构" tabindex="-1"><a class="header-anchor" href="#解构"><span>解构</span></a></h4><blockquote><p>{...xxx} 只能实现第一层，当有多层的时候还是浅拷贝</p></blockquote><h4 id="json" tabindex="-1"><a class="header-anchor" href="#json"><span>JSON</span></a></h4><blockquote><p>JSON.parse(JSON.stringify(xxx)) 该方法不会拷贝内部函数</p></blockquote><h4 id="递归" tabindex="-1"><a class="header-anchor" href="#递归"><span>递归</span></a></h4><blockquote><p>利用递归实现函数</p></blockquote><h4 id="structuredclone" tabindex="-1"><a class="header-anchor" href="#structuredclone"><span>structuredClone</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span>  <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span>  <span class="token punctuation">}</span>
a<span class="token punctuation">.</span>c <span class="token operator">=</span> a
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token function">structuredClone</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> a
a<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">2</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// {a: 2, b: 2, c: {a: 2, b: 2, c: {…}} }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// {a: 1, b: 2, c: {a: 1, b: 2, c: {…}} }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token comment">// {a: 2, b: 2, c: {a: 2, b: 2, c: {…}} }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="messagechannel" tabindex="-1"><a class="header-anchor" href="#messagechannel"><span>MessageChannel</span></a></h4><blockquote><p><code>MessageChannel</code>: Channel Messaging API 的 MessageChannel 接口允许创建一个新的消息通道，并通过它的两个 <code>MessagePort</code> 属性发送数据。</p></blockquote>`,11),p=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{js:"",class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"deepClone"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"obj"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Promise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"resolve"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token punctuation"},"{"),s(" port1"),n("span",{class:"token punctuation"},","),s(" port2 "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"MessageChannel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    port1`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"postMessage"),n("span",{class:"token punctuation"},"("),s("obj"),n("span",{class:"token punctuation"},")"),s(`
    port2`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"onmessage"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token parameter"},"msg"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),s("msg"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"let"),s(" a "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"a"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"b"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"2"),s(),n("span",{class:"token punctuation"},"}"),s(`
a`),n("span",{class:"token punctuation"},"."),s("c "),n("span",{class:"token operator"},"="),s(` a
`),n("span",{class:"token keyword"},"const"),s(" b "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token function"},"deepClone"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token punctuation"},","),s(" a "),n("span",{class:"token operator"},"==="),s(" b"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// <ref *1> { a: 1, b: 2, c: [Circular *1] } <ref *1> { a: 1, b: 2, c: [Circular *1] } false"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),i=n("h3",{id:"长整数加法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#长整数加法"},[n("span",null,"长整数加法")])],-1),r=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{js:"",class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"sum"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"let"),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"''"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" length "),n("span",{class:"token operator"},"="),s(" Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"max"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},")"),s(`
  a `),n("span",{class:"token operator"},"="),s(" a"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"padStart"),n("span",{class:"token punctuation"},"("),s("length"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'0'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 补齐长度"),s(`
  b `),n("span",{class:"token operator"},"="),s(" b"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"padStart"),n("span",{class:"token punctuation"},"("),s("length"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'0'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 补齐长度"),s(`
  `),n("span",{class:"token keyword"},"let"),s(" carry "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token comment"},"// 进位标识"),s(`
  `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"let"),s(" i "),n("span",{class:"token operator"},"="),s(" length "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"--"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" n "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"+"),s("a"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token operator"},"+"),s("b"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"+"),s(` carry
    carry `),n("span",{class:"token operator"},"="),s(" Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"floor"),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s(`
    result `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(` result
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("result"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    result `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"'1'"),s(),n("span",{class:"token operator"},"+"),s(` result
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(` result
`),n("span",{class:"token punctuation"},"}"),s(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"sum"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'2345678901234567'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'9874563210369852'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 1220242111604419"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),u=a('<h3 id="字符串-码元和码点" tabindex="-1"><a class="header-anchor" href="#字符串-码元和码点"><span>字符串-码元和码点</span></a></h3><table><thead><tr><th>格式</th><th>示例</th><th>码点范围</th><th>注意</th></tr></thead><tbody><tr><td><strong>\\8进制</strong></td><td><code>&#39;\\141&#39;</code></td><td>0-255</td><td>模板字符串中不可直接使用</td></tr><tr><td><strong>\\x两位16进制</strong></td><td><code>&#39;\\x61&#39;</code></td><td>0-255</td><td>必须两位</td></tr><tr><td><strong>\\u四位16进制</strong></td><td><code>&#39;\\u0061&#39;</code></td><td>0-65535</td><td>必须四位</td></tr><tr><td><strong>\\u{16进制}</strong></td><td><code>&#39;\\u{0061}&#39;</code></td><td>0-0x10FFFF</td><td>码点大于 <code>0xFFFF</code>，length为2，下标访问值是高低位的值</td></tr></tbody></table>',2),k=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{js:"",class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"'123𠀠ÃÄÅÆ'"),s(`
`),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"."),s("prototype"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"sliceByPoint"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("pStart"),n("span",{class:"token punctuation"},","),s(" pEnd")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"let"),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"''"),s(`
  `),n("span",{class:"token keyword"},"let"),s(" pIndex "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token comment"},"// 码元"),s(`
  `),n("span",{class:"token keyword"},"let"),s(" cIndex "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token comment"},"// 码点"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),s("pIndex "),n("span",{class:"token operator"},">="),s(" pEnd "),n("span",{class:"token operator"},"||"),s(" cIndex "),n("span",{class:"token operator"},">="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"break"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" point "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"codePointAt"),n("span",{class:"token punctuation"},"("),s("cIndex"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("pIndex "),n("span",{class:"token operator"},">="),s(" pStart"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      result `),n("span",{class:"token operator"},"+="),s(" String"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"fromCodePoint"),n("span",{class:"token punctuation"},"("),s("point"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    pIndex`),n("span",{class:"token operator"},"++"),s(`
    cIndex `),n("span",{class:"token operator"},"+="),s(" point "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0xffff"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),s(),n("span",{class:"token comment"},"// 如果是两个码点的直接+2"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(` result
`),n("span",{class:"token punctuation"},"}"),s(`

str`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sliceByPoint"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// '123𠀠Ã'"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),d=n("h3",{id:"字符串-异步替换",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#字符串-异步替换"},[n("span",null,"字符串-异步替换")])],-1),m=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{js:"",class:"language-javascript"},[n("code",null,[n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"."),s("prototype"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"asyncReplaceAll"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("pattern"),n("span",{class:"token punctuation"},","),s(" replacer")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// 校验替换参数，如果是文本，调用原本替换方法，同时不是函数的话，报类型错误"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),s(" replacer "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token string"},"'string'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replaceAll"),n("span",{class:"token punctuation"},"("),s("pattern"),n("span",{class:"token punctuation"},","),s(" replacer"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),s(" replacer "),n("span",{class:"token operator"},"!=="),s(),n("span",{class:"token string"},"'function'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'The second argument should be an async function or a string'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token comment"},"// 校验正则参数，同时新建正则实例，不会影响传入的正则"),s(`
  `),n("span",{class:"token keyword"},"let"),s(` reg
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"typeof"),s(" pattern "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token string"},"'string'"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    reg `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"RegExp"),n("span",{class:"token punctuation"},"("),s("pattern"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"[.*+\\-?^${}()|[\\]\\\\]"),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"g")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'\\\\$&'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'g'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("pattern "),n("span",{class:"token keyword"},"instanceof"),s(),n("span",{class:"token class-name"},"RegExp"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("pattern"),n("span",{class:"token punctuation"},"."),s("global"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'The pattern RegExp should have the global flag set'"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    reg `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"RegExp"),n("span",{class:"token punctuation"},"("),s("pattern"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"TypeError"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'The pattern should be a string or a RegExp'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"let"),s(" match "),n("span",{class:"token comment"},"// 正则执行结果"),s(`
  `),n("span",{class:"token keyword"},"let"),s(" lastIndex "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token comment"},"// 角标"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token comment"},"// 文本结果集合"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("match "),n("span",{class:"token operator"},"="),s(" reg"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"exec"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// [ '55', index: 4, input: '234,55-234_j24-455', groups: undefined ]"),s(`
    `),n("span",{class:"token comment"},"// [ '234', index: 7, input: '234,55-234_j24-455', groups: undefined ]"),s(`
    `),n("span",{class:"token comment"},"// [ '24', index: 12, input: '234,55-234_j24-455', groups: undefined ]"),s(`
    `),n("span",{class:"token comment"},"// [ '455', index: 15, input: '234,55-234_j24-455', groups: undefined ]"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"slice"),n("span",{class:"token punctuation"},"("),s("lastIndex"),n("span",{class:"token punctuation"},","),s(" match"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 获取两次结果之间的文本"),s(`
    lastIndex `),n("span",{class:"token operator"},"="),s(" match"),n("span",{class:"token punctuation"},"."),s("index "),n("span",{class:"token operator"},"+"),s(" match"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token comment"},"// 更新当前下标值"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" promise "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"replacer"),n("span",{class:"token punctuation"},"("),s("match"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 执行异步替换函数"),s(`
    result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),s("str"),n("span",{class:"token punctuation"},","),s(" promise"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"slice"),n("span",{class:"token punctuation"},"("),s("lastIndex"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 防止后面也有字符"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" temp "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" Promise"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"all"),n("span",{class:"token punctuation"},"("),s("result"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 等待异步事件完成"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" temp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"join"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"const"),s(" template "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token string"},"234,55-234_j24-455"),n("span",{class:"token template-punctuation string"},"`")]),s(`
`),n("span",{class:"token comment"},"// 模拟异步函数"),s(`
`),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"asyncPlaceFn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"str"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" max "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"9"),n("span",{class:"token punctuation"},","),s("min "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" temp "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"'一二三四五六七八九十'"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" num "),n("span",{class:"token operator"},"="),s(" Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"floor"),n("span",{class:"token punctuation"},"("),s("Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"random"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token punctuation"},"("),s("max "),n("span",{class:"token operator"},"-"),s(" min "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(" min"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Promise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"resolve"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),s("temp"),n("span",{class:"token punctuation"},"["),s("num"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"const"),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" template"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asyncReplaceAll"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"\\d+"),n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-flags"},"g")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"match"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"asyncPlaceFn"),n("span",{class:"token punctuation"},"("),s("match"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("result"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 五,二-五_j七-八"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=[l,p,i,r,u,k,d,m];function h(g,v){return e(),o("div",null,b)}const w=t(c,[["render",h],["__file","index.html.vue"]]),x=JSON.parse('{"path":"/Tips/JavaScript/Data/","title":"数据操作相关","lang":"zh-CN","frontmatter":{"title":"数据操作相关","lang":"zh-CN","date":"2024-05-18T17:15:31.000Z","permalink":"/Tips/JavaScript/Data/","category":["JavaScript"],"tag":["Tips"],"description":"深克隆 解构 {...xxx} 只能实现第一层，当有多层的时候还是浅拷贝 JSON JSON.parse(JSON.stringify(xxx)) 该方法不会拷贝内部函数 递归 利用递归实现函数 structuredClone MessageChannel MessageChannel: Channel Messaging API 的 MessageC...","head":[["meta",{"property":"og:url","content":"https://shaohui-jin.github.io/Tips/JavaScript/Data/"}],["meta",{"property":"og:title","content":"数据操作相关"}],["meta",{"property":"og:description","content":"深克隆 解构 {...xxx} 只能实现第一层，当有多层的时候还是浅拷贝 JSON JSON.parse(JSON.stringify(xxx)) 该方法不会拷贝内部函数 递归 利用递归实现函数 structuredClone MessageChannel MessageChannel: Channel Messaging API 的 MessageC..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-31T11:15:28.000Z"}],["meta",{"property":"article:author","content":"石怜安"}],["meta",{"property":"article:tag","content":"Tips"}],["meta",{"property":"article:published_time","content":"2024-05-18T17:15:31.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-31T11:15:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据操作相关\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-18T17:15:31.000Z\\",\\"dateModified\\":\\"2025-03-31T11:15:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"石怜安\\",\\"url\\":\\"https://shaohui-jin.github.io\\"}]}"]]},"headers":[{"level":3,"title":"深克隆","slug":"深克隆","link":"#深克隆","children":[{"level":4,"title":"解构","slug":"解构","link":"#解构","children":[]},{"level":4,"title":"JSON","slug":"json","link":"#json","children":[]},{"level":4,"title":"递归","slug":"递归","link":"#递归","children":[]},{"level":4,"title":"structuredClone","slug":"structuredclone","link":"#structuredclone","children":[]},{"level":4,"title":"MessageChannel","slug":"messagechannel","link":"#messagechannel","children":[]}]},{"level":3,"title":"长整数加法","slug":"长整数加法","link":"#长整数加法","children":[]},{"level":3,"title":"字符串-码元和码点","slug":"字符串-码元和码点","link":"#字符串-码元和码点","children":[]},{"level":3,"title":"字符串-异步替换","slug":"字符串-异步替换","link":"#字符串-异步替换","children":[]}],"git":{"createdTime":1743419728000,"updatedTime":1743419728000,"contributors":[{"name":"shaohui_jin","email":"1051131737@qq.com","commits":1}]},"readingTime":{"minutes":2.8,"words":840},"filePathRelative":"zh/小技巧/JavaScript/数据操作相关.md","localizedDate":"2024年5月18日","excerpt":"<h3>深克隆</h3>\\n<h4>解构</h4>\\n<blockquote>\\n<p>{...xxx} 只能实现第一层，当有多层的时候还是浅拷贝</p>\\n</blockquote>\\n<h4>JSON</h4>\\n<blockquote>\\n<p>JSON.parse(JSON.stringify(xxx))  该方法不会拷贝内部函数</p>\\n</blockquote>\\n<h4>递归</h4>\\n<blockquote>\\n<p>利用递归实现函数</p>\\n</blockquote>\\n<h4>structuredClone</h4>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">let</span> a <span class=\\"token operator\\">=</span>  <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">a</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">b</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">2</span>  <span class=\\"token punctuation\\">}</span>\\na<span class=\\"token punctuation\\">.</span>c <span class=\\"token operator\\">=</span> a\\n<span class=\\"token keyword\\">let</span> b <span class=\\"token operator\\">=</span> <span class=\\"token function\\">structuredClone</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">let</span> c <span class=\\"token operator\\">=</span> a\\na<span class=\\"token punctuation\\">.</span>a <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span>\\n\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// {a: 2, b: 2, c: {a: 2, b: 2, c: {…}} }</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// {a: 1, b: 2, c: {a: 1, b: 2, c: {…}} }</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// {a: 2, b: 2, c: {a: 2, b: 2, c: {…}} }</span>\\n</code></pre></div>","autoDesc":true}');export{w as comp,x as data};
