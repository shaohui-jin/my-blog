import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-BU1B3dzc.js";const p={},o=t(`<h3 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现"><span>代码实现</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">expandJsonTool</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> jmap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">var</span> <span class="token function-variable function">expandJson</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">jstr<span class="token punctuation">,</span> mapIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>jstr <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> jstr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">expandJson</span><span class="token punctuation">(</span>jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mapIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>jstr <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> jstr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 如果mapIndex为false,null,&#39;&#39;时，则不加初始索引</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mapIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">var</span> key <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mapIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Array 是 Object 的子集，先判断是否为 Array,如果是，则不走Object的判断</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token keyword">in</span> jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">expandJson</span><span class="token punctuation">(</span>jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>j<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">expandJson</span><span class="token punctuation">(</span>jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">&amp;&amp;</span> jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;{&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">expandJson</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          jmap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">expandJson</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> jmap
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数使用" tabindex="-1"><a class="header-anchor" href="#函数使用"><span>函数使用</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">expandJsonTool</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 如上</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> demo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;Type&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;Notification&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;MessageId&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;f0477020-1bb4-598d&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;TopicArn&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;arn:aws:sns:us-east-2::made&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;Subject&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;ALARM: \\&quot;made\\&quot; in US East (Ohio)&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;Message&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;{\\&quot;AlarmName\\&quot;:\\&quot;made\\&quot;,\\&quot;AlarmDescription\\&quot;:null,\\&quot;AWSAccountId\\&quot;:\\&quot;917958955567\\&quot;,\\&quot;AldatedTimestamp\\&quot;:\\&quot;20230000\\&quot;,\\&quot;NewStateValue\\&quot;:\\&quot;ALARM\\&quot;,\\&quot;NewStateReason\\&quot;:\\&quot;Threshold.\\&quot;,\\&quot;StateChangeTime\\&quot;:\\&quot;2020000\\&quot;,\\&quot;Region\\&quot;:\\&quot;US East (Ohio)\\&quot;,\\&quot;AlarmArn\\&quot;:\\&quot;arn:alarm:made\\&quot;,\\&quot;OldStateValue\\&quot;:\\&quot;INSUFFICIENT_DATA\\&quot;,\\&quot;OKActions\\&quot;:[],\\&quot;AlarmActions\\&quot;:[\\&quot;arnmade\\&quot;],\\&quot;InsufficientDataActions\\&quot;:[],\\&quot;Trigger\\&quot;:{\\&quot;MetricName\\&quot;:\\&quot;NetworkTransmitThroughput\\&quot;,\\&quot;Namespace\\&quot;:\\&quot;AWS/RDS\\&quot;,\\&quot;StatisticType\\&quot;:\\&quot;Statistic\\&quot;,\\&quot;Statistic\\&quot;:\\&quot;AVERAGE\\&quot;,\\&quot;Unit\\&quot;:null,\\&quot;Dimensions\\&quot;:[{\\&quot;value\\&quot;:\\&quot;mysql\\&quot;,\\&quot;name\\&quot;:\\&quot;EngineName\\&quot;}],\\&quot;Period\\&quot;:300,\\&quot;EvaluPeriods\\&quot;:1,\\&quot;DatapAlarm\\&quot;:1,\\&quot;Comparator\\&quot;:\\&quot;Greatehreshold\\&quot;,\\&quot;Thhold\\&quot;:1.0,\\&quot;TreaingData\\&quot;:\\&quot;missing\\&quot;,\\&quot;Evaluateile\\&quot;:\\&quot;\\&quot;}}&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;Timestamp&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2023-03-06T07:39:44.238Z&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;SignatureVersion&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;Signature&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;P2gIvFv4i&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;SigningCertURL&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;h&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;UnsubscribeURL&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http&quot;</span>
<span class="token punctuation">}</span>
<span class="token function">expandJsonTool</span><span class="token punctuation">(</span>demo<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="结果输出" tabindex="-1"><a class="header-anchor" href="#结果输出"><span>结果输出</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{
    &quot;Type&quot;: &quot;Notification&quot;,
    &quot;MessageId&quot;: &quot;f0477020-1bb4-598d&quot;,
    &quot;TopicArn&quot;: &quot;arn:aws:sns:us-east-2::made&quot;,
    &quot;Subject&quot;: &quot;ALARM: \\&quot;made\\&quot; in US East (Ohio)&quot;,
    &quot;Message.AlarmName&quot;: &quot;made&quot;,
    &quot;Message.AlarmDescription&quot;: null,
    &quot;Message.AWSAccountId&quot;: &quot;917958955567&quot;,
    &quot;Message.AldatedTimestamp&quot;: &quot;20230000&quot;,
    &quot;Message.NewStateValue&quot;: &quot;ALARM&quot;,
    &quot;Message.NewStateReason&quot;: &quot;Threshold.&quot;,
    &quot;Message.StateChangeTime&quot;: &quot;2020000&quot;,
    &quot;Message.Region&quot;: &quot;US East (Ohio)&quot;,
    &quot;Message.AlarmArn&quot;: &quot;arn:alarm:made&quot;,
    &quot;Message.OldStateValue&quot;: &quot;INSUFFICIENT_DATA&quot;,
    &quot;Message.Trigger.MetricName&quot;: &quot;NetworkTransmitThroughput&quot;,
    &quot;Message.Trigger.Namespace&quot;: &quot;AWS/RDS&quot;,
    &quot;Message.Trigger.StatisticType&quot;: &quot;Statistic&quot;,
    &quot;Message.Trigger.Statistic&quot;: &quot;AVERAGE&quot;,
    &quot;Message.Trigger.Unit&quot;: null,
    &quot;Message.Trigger.Dimensions[0].value&quot;: &quot;mysql&quot;,
    &quot;Message.Trigger.Dimensions[0].name&quot;: &quot;EngineName&quot;,
    &quot;Message.Trigger.Period&quot;: 300,
    &quot;Message.Trigger.EvaluPeriods&quot;: 1,
    &quot;Message.Trigger.DatapAlarm&quot;: 1,
    &quot;Message.Trigger.Comparator&quot;: &quot;Greatehreshold&quot;,
    &quot;Message.Trigger.Thhold&quot;: 1,
    &quot;Message.Trigger.TreaingData&quot;: &quot;missing&quot;,
    &quot;Message.Trigger.Evaluateile&quot;: &quot;&quot;,
    &quot;Timestamp&quot;: &quot;2023-03-06T07:39:44.238Z&quot;,
    &quot;SignatureVersion&quot;: &quot;1&quot;,
    &quot;Signature&quot;: &quot;P2gIvFv4i&quot;,
    &quot;SigningCertURL&quot;: &quot;h&quot;,
    &quot;UnsubscribeURL&quot;: &quot;http&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),e=[o];function u(c,i){return s(),a("div",null,e)}const k=n(p,[["render",u],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/Promotion/Code/FlatJson/","title":"请使用JS完成一个JSON扁平化","lang":"zh-CN","frontmatter":{"title":"请使用JS完成一个JSON扁平化","date":"2023-02-25T14:57:37.000Z","permalink":"/Promotion/Code/FlatJson/","category":["JavaScript"],"tag":["JavaScript"],"description":"代码实现 函数使用 结果输出","head":[["meta",{"property":"og:url","content":"https://shaohui-jin.github.io/my-blog/Promotion/Code/FlatJson/"}],["meta",{"property":"og:title","content":"请使用JS完成一个JSON扁平化"}],["meta",{"property":"og:description","content":"代码实现 函数使用 结果输出"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-24T09:52:09.000Z"}],["meta",{"property":"article:author","content":"石怜安"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:published_time","content":"2023-02-25T14:57:37.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-24T09:52:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"请使用JS完成一个JSON扁平化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-25T14:57:37.000Z\\",\\"dateModified\\":\\"2025-04-24T09:52:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"石怜安\\",\\"url\\":\\"https://shaohui-jin.github.io\\"}]}"]]},"headers":[{"level":3,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":3,"title":"函数使用","slug":"函数使用","link":"#函数使用","children":[]},{"level":3,"title":"结果输出","slug":"结果输出","link":"#结果输出","children":[]}],"git":{"createdTime":1745488329000,"updatedTime":1745488329000,"contributors":[{"name":"shaohui_jin","email":"1051131737@qq.com","commits":1}]},"readingTime":{"minutes":1.24,"words":373},"filePathRelative":"zh/精选文章/代码题/请使用JS完成一个JSON扁平化.md","localizedDate":"2023年2月25日","excerpt":"<h3>代码实现</h3>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">expandJsonTool</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">data<span class=\\"token punctuation\\">,</span> k</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">var</span> jmap <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">expandJson</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">jstr<span class=\\"token punctuation\\">,</span> mapIndex</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>jstr <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">var</span> i <span class=\\"token keyword\\">in</span> jstr<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">expandJson</span><span class=\\"token punctuation\\">(</span>jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>mapIndex<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">[</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>i<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">]</span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>jstr <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">var</span> i <span class=\\"token keyword\\">in</span> jstr<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 如果mapIndex为false,null,\'\'时，则不加初始索引</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>mapIndex<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token keyword\\">var</span> key <span class=\\"token operator\\">=</span> i<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token keyword\\">var</span> key <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>mapIndex<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">.</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>i<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token comment\\">// Array 是 Object 的子集，先判断是否为 Array,如果是，则不走Object的判断</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">var</span> j <span class=\\"token keyword\\">in</span> jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token function\\">expandJson</span><span class=\\"token punctuation\\">(</span>jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>key<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">[</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>j<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">]</span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n          <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token function\\">expandJson</span><span class=\\"token punctuation\\">(</span>jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span> jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">===</span> <span class=\\"token string\\">\'string\'</span> <span class=\\"token operator\\">&amp;&amp;</span> jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">includes</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\'{\'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;&amp;</span> jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">includes</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\'}\'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token function\\">expandJson</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parse</span><span class=\\"token punctuation\\">(</span>jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n          jmap<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">expandJson</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">,</span> k<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> jmap\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
